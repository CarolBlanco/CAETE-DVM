# ! Copyright 2017- LabTerra

# !     This program is free software: you can redistribute it and/or modify
# !     it under the terms of the GNU General Public License as published by
# !     the Free Software Foundation, either version 3 of the License, or
# !     (at your option) any later version.)

# !     This program is distributed in the hope that it will be useful,
# !     but WITHOUT ANY WARRANTY; without even the implied warranty of
# !     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# !     GNU General Public License for more details.

# !     You should have received a copy of the GNU General Public License
# !     along with this program.  If not, see <http://www.gnu.org/licenses/>.

# ! AUTHOR: JP Darela


# Variables
PYEXEC = python
F2PY = $(PYEXEC) -m numpy.f2py
MODNAME = caete_module
INTERFACES = $(MODNAME).pyf
DEBUG_PROGRAM = run_debug
MOD_DIR = ./

# Flags
MFLAG = -m
HFLAG = -h
CFLAG = -c
OVRTFLAG = --overwrite-signature
FC = gfortran
FCFLAGS = -g -Wall -Wextra -fcheck=all -ffpe-trap=invalid,zero,overflow,underflow -fbacktrace -fbounds-check -Wconversion -pedantic
FLFLAGS = -c -g -Wall -fcheck=all -Wextra -ffpe-trap=invalid,zero,overflow,underflow -fbacktrace -fbounds-check -Wconversion -pedantic
EXT_FLAGS = -fno-unsafe-math-optimizations -frounding-math -fsignaling-nans
IFX_FLAGS = -fpp -QxHost -I$(MOD_DIR) -DPREPEND_FORTRAN -DNO_APPEND_FORTRAN -DUPPERCASE_FORTRAN -DUNDERSCORE_G77

# Sources
src_lib = global.f90 funcs.f90 evap.f90 soil_dec.f90 cc.f90 allocation.f90 productivity.f90
sources = $(src_lib) budget.F90
src_obj = global.o funcs.o evap.o soil_dec.o cc.o allocation.o productivity.o
src_obj_w = global.obj funcs.obj evap.obj soil_dec.obj cc.obj allocation.obj productivity.obj
objects = $(src_obj) budget.o debug_caete.o

# Targets
.PHONY: interface so_parallel so so_ifx so_ifx_parallel fortran_module debug clean clean_so clean_alloc clean_NP clean_win clean_win_so

interface: $(sources)
    @echo "Creating Fortran interfaces for the caete_module using f2py..."
    @$(PYEXEC) set_npls.py
    @$(F2PY) $(HFLAG) $(INTERFACES) $(sources) $(MFLAG) $(MODNAME) $(OVRTFLAG) --quiet

so_parallel: $(sources) interface
    $(F2PY) $(INTERFACES) $(CFLAG) $(sources) --f90flags="-Wall $(EXT_FLAGS) -fopenmp" -lgomp
    @echo "Parallel version of caete_module created using gfortran"

so: $(sources) interface
    $(F2PY) $(INTERFACES) $(CFLAG) $(sources) --f90flags="-Wall $(EXT_FLAGS)"
    @echo "Serial version of caete_module created using gfortran"

so_ifx: $(sources) interface
    @$(F2PY) $(INTERFACES) -c $(sources) --f90exec="ifx" --f90flags="$(IFX_FLAGS)" --quiet
    @echo "Serial version of caete_module created using IFX"

so_ifx_parallel: $(sources) interface
    $(F2PY) $(INTERFACES) -c $(sources) --f90exec="ifx" --f90flags="$(IFX_FLAGS) -qopenmp"
    @echo "Parallel version of caete_module created using IFX"

fortran_module: $(sources)
    ifx -fpp -c $(sources)

debug: $(objects) so
    $(PYEXEC) create_plsbin.py
    $(FC) -o $(DEBUG_PROGRAM) $(FCFLAGS) $(objects)

# Object files
%.o: %.f90
    $(FC) $(FLFLAGS) $<

%.mod: %.o %.f90
    $(FC) $(FLFLAGS) $<

# Clean targets
clean:
    rm -rf test *.mod *.s *.o pls_ex.txt __pycache__ run_debug logfile.log
    clear

clean_so: clean
    rm -rf *.so *.pyf *.obj *.pyd *.a *.i90 *.mod

clean_alloc:
    rm -rf wallo.npy gallo.npy

clean_NP:
    rm -rf NP1.npy NP2.npy NP3.npy

clean_win:
    del /s *.mod
    del /s *.o
    del /s *.s
    del pls_ex.txt
    del /s /q __pycache__
    del run_debug
    del logfile.log
    del /s *.obj

clean_win_so: clean_win
    del /s *.pyd
    del /s *.pyf